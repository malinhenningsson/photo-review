[{"/Applications/Ampps/www/Javascript 2/photo-review/src/index.js":"1","/Applications/Ampps/www/Javascript 2/photo-review/src/App.js":"2","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Navigation.js":"3","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Frontpage.js":"4","/Applications/Ampps/www/Javascript 2/photo-review/src/components/NotFound.js":"5","/Applications/Ampps/www/Javascript 2/photo-review/src/contexts/AuthContext.js":"6","/Applications/Ampps/www/Javascript 2/photo-review/src/firebase/index.js":"7","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Logout.js":"8","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/ProtectedRoute.js":"9","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Login.js":"10","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Register.js":"11","/Applications/Ampps/www/Javascript 2/photo-review/src/components/upload/Upload.js":"12","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/Album.js":"13","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/Albums.js":"14","/Applications/Ampps/www/Javascript 2/photo-review/src/components/upload/PhotoUpload.js":"15","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetAlbums.js":"16","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetAlbum.js":"17","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useUploadPhoto.js":"18","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/EditAlbum.js":"19","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/ReviewAlbum.js":"20","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useDeletePhoto.js":"21","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useDeleteAlbum.js":"22","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/ReviewThanks.js":"23","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetPhotosInAlbum.js":"24","/Applications/Ampps/www/Javascript 2/photo-review/src/components/LoadingSpinner.js":"25","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/PhotoGrid.js":"26"},{"size":198,"mtime":1609836543150,"results":"27","hashOfConfig":"28"},{"size":1969,"mtime":1610372963134,"results":"29","hashOfConfig":"28"},{"size":2471,"mtime":1610557814781,"results":"30","hashOfConfig":"28"},{"size":1187,"mtime":1610550637351,"results":"31","hashOfConfig":"28"},{"size":212,"mtime":1609844237919,"results":"32","hashOfConfig":"28"},{"size":1234,"mtime":1610034560712,"results":"33","hashOfConfig":"28"},{"size":826,"mtime":1609851446513,"results":"34","hashOfConfig":"28"},{"size":709,"mtime":1609855603582,"results":"35","hashOfConfig":"28"},{"size":397,"mtime":1609855597112,"results":"36","hashOfConfig":"28"},{"size":1837,"mtime":1610542457321,"results":"37","hashOfConfig":"28"},{"size":2339,"mtime":1610542509518,"results":"38","hashOfConfig":"28"},{"size":3206,"mtime":1610545324673,"results":"39","hashOfConfig":"28"},{"size":8661,"mtime":1610551675070,"results":"40","hashOfConfig":"28"},{"size":4024,"mtime":1610556861472,"results":"41","hashOfConfig":"28"},{"size":2785,"mtime":1610551196778,"results":"42","hashOfConfig":"28"},{"size":963,"mtime":1610028847083,"results":"43","hashOfConfig":"28"},{"size":551,"mtime":1610532655410,"results":"44","hashOfConfig":"28"},{"size":1911,"mtime":1610450134925,"results":"45","hashOfConfig":"28"},{"size":4297,"mtime":1610545331081,"results":"46","hashOfConfig":"28"},{"size":5905,"mtime":1610544048180,"results":"47","hashOfConfig":"28"},{"size":1980,"mtime":1610462168850,"results":"48","hashOfConfig":"28"},{"size":1561,"mtime":1610467335981,"results":"49","hashOfConfig":"28"},{"size":921,"mtime":1610553356537,"results":"50","hashOfConfig":"28"},{"size":755,"mtime":1610459160398,"results":"51","hashOfConfig":"28"},{"size":340,"mtime":1610535005082,"results":"52","hashOfConfig":"28"},{"size":3719,"mtime":1610555816180,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1b5vosf",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Applications/Ampps/www/Javascript 2/photo-review/src/index.js",[],["114","115"],"/Applications/Ampps/www/Javascript 2/photo-review/src/App.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Navigation.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Frontpage.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/NotFound.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/contexts/AuthContext.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/firebase/index.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Logout.js",["116"],"import React, { useEffect } from 'react'\nimport { Spinner } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport { useAuthContext } from '../../contexts/AuthContext'\n\nconst Logout = () => {\n    const { logout } = useAuthContext();\n    const navigate = useNavigate();\n    \n    useEffect(() => {\n        (async (e) => {\n            await logout();\n            navigate('/')\n        })();\n    }, []);\n    \n    return (\n        <div className=\"text-center mt-4\">\n            <p>You are logging out... </p>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default Logout","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/ProtectedRoute.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Login.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Register.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/upload/Upload.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/Album.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/Albums.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/upload/PhotoUpload.js",["117"],"import React, { useCallback, useEffect, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\nimport useUploadPhoto from '../../hooks/useUploadPhoto'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst PhotoUpload = ({ albumId }) => {\n    const [message, setMessage] = useState(null);\n    const [photo, setPhoto] = useState(null);\n    const { uploadProgress, error, success } = useUploadPhoto(photo, albumId);\n\n    useEffect(() => {\n        if (error) {\n\t\t\tsetMessage({\n\t\t\t\terror: true,\n\t\t\t\ttext: error,\n\t\t\t});\n\t\t} else if (success) {\n\t\t\tsetMessage({\n\t\t\t\tsuccess: true,\n\t\t\t\ttext: 'Image successfully uploaded!',\n\t\t\t});\n\t\t\tsetPhoto(null);\n\t\t} else {\n\t\t\tsetMessage(null);\n\t\t}\n    }, [error, success])\n\n    const onDrop = useCallback(acceptedFiles => {\n        setMessage(null);\n\n        if (acceptedFiles.length === 0) {\n            return;\n        }\n\n        acceptedFiles.forEach(file => {\n            setPhoto(file);\n        })\n    }, []);\n\n    const {\n        getRootProps, \n        getInputProps, \n        isDragActive,\n        isDragAccept\n    } = useDropzone({accept: 'image/gif, image/jpeg, image/png', onDrop});\n\n    return (\n        <>\n            <div {...getRootProps()} className=\"photo-upload-zone\">\n                <input {...getInputProps()} />\n                {\n                    isDragActive ?\n                        isDragAccept ? \n                            <span style={{color: \"lightgreen\"}}>Drop the files here!</span> \n                            : <span style={{color: \"#fc5e5e\"}}>Files are not accepted. Try again with: JPEG, PNG or GIF.</span> \n                        : <span>Drag 'n' drop some files here, or click to select files</span>\n                }\n\n                {\n                    uploadProgress !== null && (\n                        <div style={{ margin: \"1em auto\", width: \"2em\", height: \"2em\" }}>\n                            <CircularProgressbar \n                                value={uploadProgress} \n                                strokeWidth={50} \n                                styles={buildStyles({\n                                    strokeLinecap: \"butt\",\n                                    pathColor: \"#f57423\",\n                                    trailColor: \"transparent\"\n                                    })} />\n                        </div>\n                    )\n                }\n\n                {\n                    message && (\n                        <div className=\"info-message\">\n                            <p>{message.text}</p>\n                        </div>\n                    )\n                }\n            </div>\n        </>\n    )\n}\n\nexport default PhotoUpload\n","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetAlbums.js",["118"],"import { useEffect, useState } from 'react'\nimport { db } from '../firebase'\nimport { useAuthContext } from '../contexts/AuthContext';\n\nconst useGetAlbums = () => {\n    const [albums, setAlbums] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const { authUser } = useAuthContext();\n\n    useEffect(() => {\n        const unsubscribe = db.collection('albums')\n            .where('owner', '==', authUser.uid)\n            .orderBy('title')\n            .onSnapshot(snapshot => {\n                setLoading(true);\n                const snapshotAlbums = [];\n                snapshot.forEach(doc => {\n                    snapshotAlbums.push({\n                        id: doc.id,\n                        ...doc.data()\n                    })\n                })\n                setAlbums(snapshotAlbums);\n                setLoading(false);\n        })\n        return unsubscribe;\n    }, [])\n\n    return {albums, loading}\n}\n\nexport default useGetAlbums\n","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetAlbum.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useUploadPhoto.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/EditAlbum.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/ReviewAlbum.js",["119"],"import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport firebase from 'firebase/app'\nimport { db } from '../../firebase'\nimport useGetAlbum from '../../hooks/useGetAlbum'\nimport useGetPhotosInAlbum from '../../hooks/useGetPhotosInAlbum'\nimport { Alert, Button, Container, Row } from 'react-bootstrap'\nimport {SRLWrapper} from \"simple-react-lightbox\"\nimport PhotoGrid from './PhotoGrid'\nimport LoadingSpinner from '../LoadingSpinner'\n\nconst ReviewAlbum = () => {\n    const [disabledBtn, setDisabledBtn] = useState(true);\n    const [error, setError] = useState(false);\n    const [likedPhotos, setLikedPhotos] = useState([]);\n    const [reviewedPhotos, setReviewedPhotos] = useState([]);\n\n    const navigate = useNavigate();\n    const { albumId } = useParams();\n    const { album } = useGetAlbum(albumId);\n    const { photos, loading } = useGetPhotosInAlbum(albumId)\n\n    useEffect(() => {\n        // Get photos and add to a review array\n        async function getPhotos() {\n            const photoList = await Promise.all(\n                photos.map(photo => {\n                    return {\n                        id: photo.id, \n                        like: undefined\n                    }\n                })\n            );\n            setReviewedPhotos(photoList);\n        };\n        getPhotos();\n    }, [photos]);\n\n    useEffect(() => {\n        // Update array with liked photos\n        let likedArray = reviewedPhotos.filter(photo => {\n            return photo.like === true\n        });\n        setLikedPhotos(likedArray);\n\n        // Check if all photos have been reviewed, if true set disabled button to false\n        let result = reviewedPhotos.every(photo => photo.like !== undefined);\n        if (result === false) {\n            setDisabledBtn(true);\n            return;\n        } else if (result === true) {\n            setDisabledBtn(false);\n        };\n    }, [reviewedPhotos]);\n\n    const handleSendReview = async () => {\n        console.log('sent review', reviewedPhotos);\n        const title = `${album.title}-${Date.now()}`;\n\n        setError(false);\n\n        try {\n            const docRef = await db.collection('albums').add({\n                title,\n                owner: album.owner\n            });\n\n            await likedPhotos.forEach(photo => {\n                db.collection('images').doc(photo.id).update({\n                    album: firebase.firestore.FieldValue.arrayUnion(db.collection('albums').doc(docRef.id))\n                })\n            })\n\n            navigate(`/review/thanks`);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const toggleThumbs = (id, reaction) => {\n        let card = document.getElementById(id);\n        if (reaction === true) {\n            card.getElementsByClassName('thumbs-up')[0].classList.add('thumb-active');\n            card.getElementsByClassName('thumbs-down')[0].classList.remove('thumb-active');\n        } else if (reaction === false) {\n            card.getElementsByClassName('thumbs-down')[0].classList.add('thumb-active');\n            card.getElementsByClassName('thumbs-up')[0].classList.remove('thumb-active');\n        };\n    };\n\n    const updatePhotoReaction = (photo, reaction) => {\n        // Map over reviewed photos and update like reaction\n        let updatedArray = reviewedPhotos.map(item => {\n            if (item.id === photo.id) {\n                return {\n                    id: item.id,\n                    like: reaction\n                }\n            } else {\n                return item;\n            };\n        });\n        setReviewedPhotos(updatedArray);\n        toggleThumbs(photo.id, reaction);\n    };\n\n    return (\n        <>\n            <header>\n                <h1 className=\"text-center\">Review for: {album && album.title}</h1>\n                <p className=\"text-center mb-2\">{album && album.description}</p>\n            </header>\n            <Container fluid className=\"px-4 mt-4 mb-5\">\n\n                <SRLWrapper>\n                    <Row className=\"justify-content-md-center my-4\">\n                        {\n                            loading\n                                ? (\n                                    <LoadingSpinner />\n                                )\n                                : (\n                                    photos.map(photo => (\n                                        <PhotoGrid \n                                            photo={photo} \n                                            albumId={albumId} \n                                            updatePhotoReaction={updatePhotoReaction} \n                                            key={photo.id} \n                                            />\n                                    ))\n                                )  \n                        }\n                    </Row>\n                </SRLWrapper>\n\n                {\n                    reviewedPhotos && likedPhotos.length > 0 && (\n                        <div className=\"text-center mt-3\">\n                            <p>Liked photos: {likedPhotos.length} / {photos.length}</p>\n                            <div className=\"d-flex justify-content-center\">\n                                <button \n                                    disabled={disabledBtn} \n                                    className=\"btn btn-standard\" \n                                    onClick={handleSendReview}>\n                                        Send Review\n                                </button>\n                            </div>\n                            {\n                                error && (\n                                    <Alert variant=\"danger\">{error}</Alert>\n                                )\n                            }\n                        </div>\n                    )\n                }\n            </Container>\n        </>\n    )\n};\n\nexport default ReviewAlbum\n","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useDeletePhoto.js",["120"],"import {useEffect} from 'react';\nimport { db, storage } from \"../firebase\";\nimport firebase from 'firebase/app'\n\nconst useDeletePhoto = (photo, albumId) => {\n    useEffect(async () => {\n        if (!photo) {\n            return;\n        }\n        if (!albumId) {\n            return;\n        }\n\n       (async () => {\n            if (photo.length > 1) {\n                await photo.forEach(item => {\n                    // Remove album-reference in database\n                    db.collection('images').doc(item).update({\n                        album: firebase.firestore.FieldValue.arrayRemove(db.collection('albums').doc(albumId))\n                    });\n                \n                    // Check if photo exists in other albums, if not delete from database and storage\n                    db.collection('images').doc(item).get()\n                        .then(doc => {\n                            if (doc.data().album.length < 1) {\n                                db.collection('images').doc(item).delete();\n                                storage.ref(doc.data().path).delete();\n                            }\n                        });\n                })\n            } else {\n                // Remove album-reference in database\n                await db.collection('images').doc(photo.id).update({\n                     album: firebase.firestore.FieldValue.arrayRemove(db.collection('albums').doc(albumId))\n                 });\n                \n                // Check if photo exists in other albums, if not delete from database and storage\n                db.collection('images').doc(photo.id).get()\n                 .then(doc => {\n                     if (doc.data().album.length < 1) {\n                         db.collection('images').doc(photo.id).delete();\n                         storage.ref(photo.path).delete();\n                     }\n                 });\n            }\n        })();\n        \n    }, [photo, albumId]);\n    return {}\n}\n\nexport default useDeletePhoto\n","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useDeleteAlbum.js",["121"],"import {useEffect} from 'react';\nimport { db, storage } from \"../firebase\";\nimport firebase from 'firebase/app'\n\nconst useDeleteAlbum = (album) => {\n    useEffect(async () => {\n        if (!album) {\n            return;\n        };\n\n       (async () => {\n            // get all photos for album\n            db.collection('images')\n                .where('album', 'array-contains', db.collection('albums').doc(album.id)).get()\n                .then(res => {\n                    res.forEach(photo => {\n                        // remove album-reference in database\n                        photo.ref.update({\n                            album: firebase.firestore.FieldValue.arrayRemove(db.collection('albums').doc(album.id))\n                        });\n\n                        photo.ref.get().then(res => {\n                            // check if photo has more album-references,\n                            // if false delete from database and storage\n                            if (res.data().album.length < 1) {\n                                storage.ref(res.data().path).delete();\n                                db.collection('images').doc(res.id).delete();\n                            }\n                        })\n                    })\n                }).then(res => {\n                    // delete album from database\n                    db.collection('albums').doc(album.id).delete();\n                }).catch(err => {\n                    console.error(err)\n                });\n        })();\n    }, [album]);\n    return {}\n}\n\nexport default useDeleteAlbum","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/ReviewThanks.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetPhotosInAlbum.js",["122"],"import React, { useEffect, useState } from 'react'\nimport { db } from '../firebase'\n\nconst useGetPhotosInAlbum = (albumId) => {\n    const [photos, setPhotos] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\t\n    useEffect(() => {\n\t\tif (!albumId) {\n\t\t\treturn;\n\t\t};\n\n\t\tconst unsubscribe = db.collection('images')\n\t\t\t.where('album', 'array-contains', db.collection('albums').doc(albumId))\n\t\t\t.orderBy(\"name\")\n\t\t\t.onSnapshot(snapshot => {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst imgs = [];\n\n\t\t\t\tsnapshot.forEach(doc => {\n\t\t\t\t\timgs.push({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t...doc.data(),\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tsetPhotos(imgs);\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t\treturn unsubscribe;\n\t}, [albumId]);\n    return { photos, loading}\n}\n\nexport default useGetPhotosInAlbum\n","/Applications/Ampps/www/Javascript 2/photo-review/src/components/LoadingSpinner.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/PhotoGrid.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":15,"column":8,"nodeType":"129","endLine":15,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":15},{"ruleId":"127","severity":1,"message":"135","line":27,"column":8,"nodeType":"129","endLine":27,"endColumn":10,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":7,"column":17,"nodeType":"133","messageId":"134","endLine":7,"endColumn":23},{"ruleId":"127","severity":1,"message":"138","line":6,"column":15,"nodeType":"139","endLine":48,"endColumn":6},{"ruleId":"127","severity":1,"message":"138","line":6,"column":15,"nodeType":"139","endLine":38,"endColumn":6},{"ruleId":"131","severity":1,"message":"140","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["143"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'authUser.uid'. Either include it or remove the dependency array.",["144"],"'Button' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [logout, navigate]",{"range":"149","text":"150"},"Update the dependencies array to be: [authUser.uid]",{"range":"151","text":"152"},[417,419],"[logout, navigate]",[898,900],"[authUser.uid]"]