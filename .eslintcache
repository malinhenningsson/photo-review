[{"/Applications/Ampps/www/Javascript 2/photo-review/src/index.js":"1","/Applications/Ampps/www/Javascript 2/photo-review/src/App.js":"2","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Navigation.js":"3","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Frontpage.js":"4","/Applications/Ampps/www/Javascript 2/photo-review/src/components/NotFound.js":"5","/Applications/Ampps/www/Javascript 2/photo-review/src/contexts/AuthContext.js":"6","/Applications/Ampps/www/Javascript 2/photo-review/src/firebase/index.js":"7","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Logout.js":"8","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/ProtectedRoute.js":"9","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Login.js":"10","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Register.js":"11","/Applications/Ampps/www/Javascript 2/photo-review/src/components/upload/Upload.js":"12","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/Album.js":"13","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/Albums.js":"14","/Applications/Ampps/www/Javascript 2/photo-review/src/components/upload/PhotoUpload.js":"15","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetAlbums.js":"16","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetAlbum.js":"17","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useUploadPhoto.js":"18","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/EditAlbum.js":"19","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/ReviewAlbum.js":"20","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useDeletePhoto.js":"21","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useDeleteAlbum.js":"22","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/ReviewThanks.js":"23"},{"size":198,"mtime":1609836543150,"results":"24","hashOfConfig":"25"},{"size":1969,"mtime":1610372963134,"results":"26","hashOfConfig":"25"},{"size":1531,"mtime":1610034714714,"results":"27","hashOfConfig":"25"},{"size":1008,"mtime":1609855439942,"results":"28","hashOfConfig":"25"},{"size":212,"mtime":1609844237919,"results":"29","hashOfConfig":"25"},{"size":1234,"mtime":1610034560712,"results":"30","hashOfConfig":"25"},{"size":826,"mtime":1609851446513,"results":"31","hashOfConfig":"25"},{"size":709,"mtime":1609855603582,"results":"32","hashOfConfig":"25"},{"size":397,"mtime":1609855597112,"results":"33","hashOfConfig":"25"},{"size":1807,"mtime":1609855997436,"results":"34","hashOfConfig":"25"},{"size":2309,"mtime":1609855601811,"results":"35","hashOfConfig":"25"},{"size":2490,"mtime":1610025845412,"results":"36","hashOfConfig":"25"},{"size":7804,"mtime":1610367857060,"results":"37","hashOfConfig":"25"},{"size":2913,"mtime":1610299504505,"results":"38","hashOfConfig":"25"},{"size":1868,"mtime":1610028027119,"results":"39","hashOfConfig":"25"},{"size":963,"mtime":1610028847083,"results":"40","hashOfConfig":"25"},{"size":956,"mtime":1610278110308,"results":"41","hashOfConfig":"25"},{"size":1656,"mtime":1610276154729,"results":"42","hashOfConfig":"25"},{"size":3637,"mtime":1610033147562,"results":"43","hashOfConfig":"25"},{"size":7337,"mtime":1610377701092,"results":"44","hashOfConfig":"25"},{"size":1917,"mtime":1610380882938,"results":"45","hashOfConfig":"25"},{"size":1141,"mtime":1610380300373,"results":"46","hashOfConfig":"25"},{"size":841,"mtime":1610373301243,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1b5vosf",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Applications/Ampps/www/Javascript 2/photo-review/src/index.js",[],["104","105"],"/Applications/Ampps/www/Javascript 2/photo-review/src/App.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Navigation.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Frontpage.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/NotFound.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/contexts/AuthContext.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/firebase/index.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Logout.js",["106"],"import React, { useEffect } from 'react'\nimport { Spinner } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport { useAuthContext } from '../../contexts/AuthContext'\n\nconst Logout = () => {\n    const { logout } = useAuthContext();\n    const navigate = useNavigate();\n    \n    useEffect(() => {\n        (async (e) => {\n            await logout();\n            navigate('/')\n        })();\n    }, []);\n    \n    return (\n        <div className=\"text-center mt-4\">\n            <p>You are logging out... </p>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default Logout","/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/ProtectedRoute.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Login.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/Authentication/Register.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/upload/Upload.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/Album.js",["107"],"import React, { useState } from 'react'\nimport { Alert, Button, Spinner, Col, Container, Card, Row } from 'react-bootstrap'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport useGetAlbum from '../../hooks/useGetAlbum'\nimport PhotoUpload from '../upload/PhotoUpload'\nimport {SRLWrapper} from \"simple-react-lightbox\"\nimport { db } from '../../firebase'\nimport firebase from 'firebase/app'\nimport { useAuthContext } from '../../contexts/AuthContext'\nimport useDeletePhoto from '../../hooks/useDeletePhoto'\n\nconst Album = () => {\n    const [uploadNewPhotos, setUploadNewPhotos] = useState(false);\n    const [selectedPhotos, setSelectedPhotos] = useState([]);\n    const [loadingNewAlbum, setLoadingNewAlbum] = useState(false);\n    const [error, setError] = useState(false);\n    const [reviewLink, setReviewLink] = useState(null);\n    const [deletePhoto, setDeletePhoto] = useState(null);\n    \n    // Route helpers\n    const { albumId } = useParams();\n    const navigate = useNavigate();\n\n    // Hooks to get album and photos\n    const {album, photos, loading} = useGetAlbum(albumId);\n    useDeletePhoto(deletePhoto, albumId); \n\n    // Get authenticated user\n    const { authUser } = useAuthContext();\n\n    const updateSelectedPhotos = (e) => {\n        let photoArray = [];\n\n        // Include photo if checked and doesn't already exist in array\n        if (e.target.checked === true) {\n            if (selectedPhotos.includes(e.target.id)) {\n                return;\n            }\n            photoArray.push(e.target.id);\n            setSelectedPhotos(selectedPhotos.concat(photoArray));\n        }\n\n        // Remove photo from selected photos\n        if (e.target.checked === false) {\n            let filteredArray = selectedPhotos.filter(photo => {\n                return photo !== e.target.id\n            })\n            setSelectedPhotos(filteredArray)\n        }\n    }\n\n    const handleCreateNewAlbum = async () => {\n        const title = prompt('New album title:');\n\n        if (title.length < 3) {\n            setError('Title must be at least 3 chars.')\n            return; \n        };\n\n        setError(false);\n        setLoadingNewAlbum(true);\n\n        try {\n            const docRef = await db.collection('albums').add({\n                title,\n                owner: authUser.uid\n            });\n\n            await selectedPhotos.forEach(photo => {\n                db.collection('images').doc(photo).update({\n                    album: firebase.firestore.FieldValue.arrayUnion(db.collection('albums').doc(docRef.id))\n                })\n            })\n\n            navigate(`/albums`);\n        } catch (err) {\n            setError(err.message);\n            setLoadingNewAlbum(false);\n        }\n\n    }\n\n    const handleCreateReviewLink = (album) => {\n        let urlOrigin = window.location.origin\n        let url = `${urlOrigin}/review/${album}`;\n        setReviewLink(url);\n    }\n\n    const handleDeletePhoto = (photo) => {\n        if (photo.length > 1) {\n                // eslint-disable-next-line no-restricted-globals\n                if (confirm(`Are you sure you want to delete all of these \\n\"${photo.length}\" photos?`)) {\n                    setDeletePhoto(photo);\n                    setSelectedPhotos([]);\n            }} else {\n                // eslint-disable-next-line no-restricted-globals\n                if (confirm(`Are you sure you want to delete photo \\n\"${photo.name}\"?`)) {\n                    setDeletePhoto(photo);\n            }\n        }\n    }\n\n    return (\n        <Container fluid className=\"px-4\">\n            <h2 className=\"text-center\">{album && album.title}</h2>\n            <p className=\"text-center mb-2\">{album && album.description}</p>\n\n            <div className=\"d-flex justify-content-between mb-3\">\n                <div>\n                    <Button variant=\"dark\" onClick={() => {navigate(`/albums/edit/${albumId}`)}}>Edit album info</Button>\n                    <Button variant=\"dark\" onClick={() => {handleCreateReviewLink(albumId)}}>Create link for client review</Button>\n                </div>\n\n                <Button variant=\"dark\" onClick={() => {setUploadNewPhotos(!uploadNewPhotos)}}>\n                    {\n                        uploadNewPhotos \n                        ? \"Hide uploader\" \n                        : \"Add photos\"\n                    }\n                </Button>\n            </div>\n\n            {\n                reviewLink && (\n                    <p>Review link: <a href={reviewLink}>{reviewLink}</a></p>\n                )\n            }\n\n            {\n                uploadNewPhotos && (\n                    <PhotoUpload albumId={albumId} />\n                )\n            }\n            <SRLWrapper>\n                <Row className=\"justify-content-md-center\">\n                    {loading\n                        ? (\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                        )\n                        : (\n                            photos.map(photo => (\n                                <Col xs={12} sm={6} md={4} lg={3} key={photo.id}>\n                                    <Card>\n                                        <a href={photo.url} >\n                                            <Card.Img variant=\"top\" src={photo.url} />\n                                        </a>\n                                        <Card.Body className=\"d-flex justify-content-between\">\n                                            <div>\n                                                <input \n                                                    type=\"checkbox\" \n                                                    id={photo.id} \n                                                    name=\"selected-photo\" \n                                                    className=\"mr-2\" \n                                                    onChange={updateSelectedPhotos}\n                                                    />\n                                                <label htmlFor=\"selected-photo\">Select</label>\n                                            </div>\n                                            <div>\n                                                <Button \n                                                    variant=\"danger\" \n                                                    className=\"btn-sm\" \n                                                    onClick={() => handleDeletePhoto(photo, albumId)}>\n                                                        X\n                                                </Button>\n                                            </div>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))\n                        )  \n                    }\n                </Row>\n            </SRLWrapper>\n\n            {\n                selectedPhotos.length > 0 && (\n                    <div className=\"text-center mt-3\">\n                        <p>Selected photos: {selectedPhotos.length}</p>\n                        <div className=\"d-flex justify-content-center\">\n                            <Button variant=\"dark\" className=\"mr-3\" onClick={handleCreateNewAlbum}>Create new album</Button>\n                            <Button variant=\"danger\" onClick={() => handleDeletePhoto(selectedPhotos)}>Delete photos</Button>\n                        </div>\n                        {\n                            error && (\n                                <Alert variant=\"danger\">{error}</Alert>\n                            )\n                        }\n                    </div>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default Album\n","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/Albums.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/upload/PhotoUpload.js",["108"],"import React, { useCallback, useEffect, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport useUploadPhoto from '../../hooks/useUploadPhoto'\n\nconst PhotoUpload = ({ albumId }) => {\n    const [photo, setPhoto] = useState(null);\n    const [message, setMessage] = useState(null);\n    const { uploadProgress, error, isSuccess } = useUploadPhoto(photo, albumId);\n\n    useEffect(() => {\n        if (error) {\n\t\t\tsetMessage({\n\t\t\t\terror: true,\n\t\t\t\ttext: error,\n\t\t\t});\n\t\t} else if (isSuccess) {\n\t\t\tsetMessage({\n\t\t\t\tsuccess: true,\n\t\t\t\ttext: 'Image successfully uploaded!',\n\t\t\t});\n\t\t\tsetPhoto(null);\n\t\t} else {\n\t\t\tsetMessage(null);\n\t\t}\n    }, [error, isSuccess])\n\n    const onDrop = useCallback(acceptedFiles => {\n        setMessage(null);\n\n        if (acceptedFiles.length === 0) {\n            return;\n        }\n\n        acceptedFiles.forEach(file => {\n            setPhoto(file);\n        })\n    }, []);\n\n    const {\n        getRootProps, \n        getInputProps, \n        isDragActive,\n        isDragAccept\n    } = useDropzone({accept: 'image/gif, image/jpeg, image/png', onDrop});\n\n    return (\n        <>\n            <div {...getRootProps()} className=\"photo-upload-zone\">\n                <input {...getInputProps()} />\n                {\n                    isDragActive ?\n                        isDragAccept ? \n                            <span style={{color: \"lightgreen\"}}>Drop the files here!</span> \n                            : <span style={{color: \"#fc5e5e\"}}>Files are not accepted. Try again with: JPEG, PNG or GIF.</span> \n                        : <span>Drag 'n' drop some files here, or click to select files</span>\n                }\n\n                {\n                    message && (\n                        <p>{message.text}</p>\n                    )\n                }\n            </div>\n        </>\n    )\n}\n\nexport default PhotoUpload\n","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetAlbums.js",["109"],"import { useEffect, useState } from 'react'\nimport { db } from '../firebase'\nimport { useAuthContext } from '../contexts/AuthContext';\n\nconst useGetAlbums = () => {\n    const [albums, setAlbums] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const { authUser } = useAuthContext();\n\n    useEffect(() => {\n        const unsubscribe = db.collection('albums')\n            .where('owner', '==', authUser.uid)\n            .orderBy('title')\n            .onSnapshot(snapshot => {\n                setLoading(true);\n                const snapshotAlbums = [];\n                snapshot.forEach(doc => {\n                    snapshotAlbums.push({\n                        id: doc.id,\n                        ...doc.data()\n                    })\n                })\n                setAlbums(snapshotAlbums);\n                setLoading(false);\n        })\n        return unsubscribe;\n    }, [])\n\n    return {albums, loading}\n}\n\nexport default useGetAlbums\n","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useGetAlbum.js",["110"],"import {useEffect, useState} from 'react'\nimport { db } from '../firebase'\nimport { useAuthContext } from '../contexts/AuthContext'\n\nconst useGetAlbum = (albumId) => {\n    const [album, setAlbum] = useState();\n\tconst [photos, setPhotos] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tdb.collection('albums').doc(albumId).get().then(doc => {\n\t\t\tsetAlbum({\n\t\t\t\tid: doc.id,\n\t\t\t\t...doc.data(),\n\t\t\t})\n\t\t})\n\t}, [albumId]);\n\n\tuseEffect(() => {\n\t\tconst unsubscribe = db.collection('images')\n\t\t\t.where('album', 'array-contains', db.collection('albums').doc(albumId))\n\t\t\t.orderBy(\"name\")\n\t\t\t.onSnapshot(snapshot => {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst imgs = [];\n\n\t\t\t\tsnapshot.forEach(doc => {\n\t\t\t\t\timgs.push({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t...doc.data(),\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tsetPhotos(imgs);\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t\treturn unsubscribe;\n\t}, [albumId]);\n    \n    return {album, photos, loading}\n}\n\nexport default useGetAlbum\n","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useUploadPhoto.js",["111"],"import { useEffect, useState } from 'react'\nimport { db, storage } from '../firebase'\nimport { useAuthContext } from '../contexts/AuthContext'\n\nconst useUploadPhoto = (photo, albumId) => {\n    const [uploadedPhoto, setUploadedPhoto] = useState(null);\n    const [error, setError] = useState(null);\n\tconst [isSuccess, setIsSuccess] = useState(false);\n    const { authUser } = useAuthContext();\n    \n    useEffect(() => {\n        if (!photo) {\n            setUploadedPhoto(null);\n            setError(null);\n            setIsSuccess(null);\n            return;\n        };\n\n        setError(false);\n        setIsSuccess(false);\n\n        const fileRef = storage.ref(`images/${authUser.uid}/${photo.name}`)\n        const uploadTask = fileRef.put(photo);\n\n        uploadTask.then(async snapshot => {\n            const url = await snapshot.ref.getDownloadURL();\n\n            const newPhoto = {\n                name: photo.name,\n                owner: authUser.uid,\n\t\t\t\tpath: snapshot.ref.fullPath,\n\t\t\t\tsize: photo.size,\n\t\t\t\ttype: photo.type,\n\t\t\t\turl: url\n            }\n            if (albumId) {\n\t\t\t\tnewPhoto.album = [db.collection('albums').doc(albumId)]\n            }\n            \n            await db.collection('images').add(newPhoto);\n\n            setIsSuccess(true);\n\n            setUploadedPhoto(newPhoto);\n            setIsSuccess(true);\n        }).catch(err => {\n            console.log(\"File upload triggered an error\", err);\n\t\t\tsetError({\n\t\t\t\ttype: \"warning\",\n\t\t\t\tmsg: `Image could not be uploaded due to an error (${err.code}).`\n\t\t\t})\n        })\n    }, [photo, authUser])\n\n    return { uploadedPhoto, error, isSuccess }\n}\n\nexport default useUploadPhoto\n",["112","113"],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/EditAlbum.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/ReviewAlbum.js",[],"/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useDeletePhoto.js",["114","115"],"import {useEffect} from 'react';\nimport { db, storage } from \"../firebase\";\nimport firebase from 'firebase/app'\n\nconst useDeletePhoto = (photo, albumId) => {\n    useEffect(async () => {\n        if (!photo) {\n            return;\n        }\n\n       (async () => {\n            if (photo.length > 1) {\n                await photo.forEach(item => {\n                    // Remove album-reference in database\n                    db.collection('images').doc(item).update({\n                        album: firebase.firestore.FieldValue.arrayRemove(db.collection('albums').doc(albumId))\n                    });\n                \n                    // Check if photo exists in other albums, if not delete from database and storage\n                    db.collection('images').doc(item).get()\n                        .then(doc => {\n                            if (doc.data().album.length < 1) {\n                                db.collection('images').doc(item).delete();\n                                storage.ref(doc.data().path).delete();\n                            }\n                        });\n                })\n            } else {\n                // Remove album-reference in database\n                await db.collection('images').doc(photo.id).update({\n                     album: firebase.firestore.FieldValue.arrayRemove(db.collection('albums').doc(albumId))\n                 });\n                \n                // Check if photo exists in other albums, if not delete from database and storage\n                db.collection('images').doc(photo.id).get()\n                 .then(doc => {\n                     if (doc.data().album.length < 1) {\n                         db.collection('images').doc(photo.id).delete();\n                         storage.ref(photo.path).delete();\n                     }\n                 });\n            }\n        })();\n        \n    }, [photo]);\n    return {}\n}\n\nexport default useDeletePhoto\n","/Applications/Ampps/www/Javascript 2/photo-review/src/hooks/useDeleteAlbum.js",["116","117","118"],"import {useEffect, useState} from 'react';\nimport { db, storage } from \"../firebase\";\nimport firebase from 'firebase/app';\nimport useDeletePhoto from './useDeletePhoto';\n\nconst useDeleteAlbum = (album) => {\n    const [photos, setPhotos] = useState();\n    const [albumId, setAlbumId] = useState();\n    useDeletePhoto(photos, albumId)\n\n    useEffect(async () => {\n        if (!album) {\n            return;\n        }\n        setAlbumId(album.id);\n\n       (async () => {\n            // get images for album\n            // THIS PART GIVES ERRORS - FIX IT!!\n            db.collection('images')\n                .where('album', 'array-contains', db.collection('albums').doc(album.id))\n                .onSnapshot(snapshot => {\n                    snapshot.forEach(doc => {\n                        setPhotos({\n                            id: doc.id,\n                            ...doc.data(),\n                        })\n                    });\n                });\n\n            // delete album from database\n            await db.collection('albums').doc(album.id).delete();\n        })();\n    }, [album]);\n    return {}\n}\n\nexport default useDeleteAlbum","/Applications/Ampps/www/Javascript 2/photo-review/src/components/albums/ReviewThanks.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":15,"column":8,"nodeType":"125","endLine":15,"endColumn":10,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":15,"column":12,"nodeType":"129","messageId":"130","endLine":15,"endColumn":27},{"ruleId":"127","severity":1,"message":"131","line":8,"column":13,"nodeType":"129","messageId":"130","endLine":8,"endColumn":27},{"ruleId":"123","severity":1,"message":"132","line":27,"column":8,"nodeType":"125","endLine":27,"endColumn":10,"suggestions":"133"},{"ruleId":"127","severity":1,"message":"134","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":24},{"ruleId":"123","severity":1,"message":"135","line":53,"column":8,"nodeType":"125","endLine":53,"endColumn":25,"suggestions":"136"},{"ruleId":"119","replacedBy":"137"},{"ruleId":"121","replacedBy":"138"},{"ruleId":"123","severity":1,"message":"139","line":6,"column":15,"nodeType":"140","endLine":45,"endColumn":6},{"ruleId":"123","severity":1,"message":"135","line":45,"column":8,"nodeType":"125","endLine":45,"endColumn":15,"suggestions":"141"},{"ruleId":"127","severity":1,"message":"142","line":2,"column":14,"nodeType":"129","messageId":"130","endLine":2,"endColumn":21},{"ruleId":"127","severity":1,"message":"143","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"139","line":11,"column":15,"nodeType":"140","endLine":34,"endColumn":6},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["146"],"no-unused-vars","'loadingNewAlbum' is assigned a value but never used.","Identifier","unusedVar","'uploadProgress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authUser.uid'. Either include it or remove the dependency array.",["147"],"'useAuthContext' is defined but never used.","React Hook useEffect has a missing dependency: 'albumId'. Either include it or remove the dependency array.",["148"],["144"],["145"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["149"],"'storage' is defined but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [logout, navigate]",{"range":"158","text":"159"},"Update the dependencies array to be: [authUser.uid]",{"range":"160","text":"161"},"Update the dependencies array to be: [photo, authUser, albumId]",{"range":"162","text":"163"},"Update the dependencies array to be: [albumId, photo]",{"range":"164","text":"165"},[417,419],"[logout, navigate]",[898,900],"[authUser.uid]",[1556,1573],"[photo, authUser, albumId]",[1860,1867],"[albumId, photo]"]